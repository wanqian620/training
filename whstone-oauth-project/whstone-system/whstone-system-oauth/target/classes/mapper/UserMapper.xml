<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.whstone.auth.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.whstone.auth.domain.entity.UserDO" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
  </resultMap>

  <!-- RoleQuery autoMapping自动映射-->
  <resultMap id="RoleQueryResultMap" type="com.whstone.auth.domain.vo.RoleQueryVO">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="code" jdbcType="VARCHAR" property="code"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <collection property="authResources" ofType="com.whstone.auth.domain.vo.ResourceVO" autoMapping="false">
      <id column="resource_id" jdbcType="INTEGER" property="id"/>
      <result column="code" jdbcType="VARCHAR" property="code"/>
      <result column="name" jdbcType="VARCHAR" property="name"/>
      <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
      <result column="url" jdbcType="VARCHAR" property="url"/>
      <result column="method" jdbcType="VARCHAR" property="method"/>
      <result column="status" jdbcType="VARCHAR" property="status"/>
    </collection>
  </resultMap>

  <sql id="BaseResultSQL">
    id,create_time,email,password,status,update_time,user_name
  </sql>

  <select id="findByUsername" resultMap="BaseResultMap">
      select
        <include refid="BaseResultSQL"></include>
      from user where status = 1 and  user_name = #{username}
  </select>


  <select id="findByUserRoleAndResource" resultMap="RoleQueryResultMap">
    select
      r.id,r.code,r.`name`,ar.id as resource_id,ar.parent_id,
      ar.url,ar.method,ar.status
    from auth_resource ar
           INNER JOIN role_resource rr on rr.resource_id = ar.id
           INNER JOIN role r on rr.role_id = r.id
           INNER JOIN user_role ur on r.id = ur.role_id
    where ur.user_id = #{userId}
  </select>
</mapper>